/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if (root == null) {
            return true;
        } else {
            int leftMaxHeight = maxHeight(root.left);
            int rightMaxHeight = maxHeight(root.right);
            return Math.abs(leftMaxHeight - rightMaxHeight) <= 1 && isBalanced(root.right) && isBalanced(root.left);
        }
    }

    private int maxHeight(TreeNode root) {
        if (root == null)
            return 0;
        else {
            return 1 + Math.max(maxHeight(root.left), maxHeight(root.right));
        }
    }
}
